/* global use, db */
// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.
// The result of the last command run in a playground is shown on the results panel.
// By default the first 20 documents will be returned with a cursor.
// Use 'console.log()' to print to the debug output.
// For more documentation on playgrounds please refer to
// https://www.mongodb.com/docs/mongodb-vscode/playgrounds/

// Select the database to use.
use("VidyaVichar");

// insert collections to the Courses database
db.courseMapping.drop();
db.courseMapping.insertMany([
  {
    courseName: "SSD",
    instructorEmail: ["sai@example.com", "john@example.com"],
    taEmail: ["aditya@example.com", "chandrasekhar@example.com"],
    studentEmail: ["anshul@example.com", "bidisha@example.com", "tanooj@example.com", "geetam@example.com", "anukriti@example.com"],
  },
  {
    courseName: "AOS",
    instructorEmail: ["john@example.com"],
    taEmail: ["alice@example.com", "bob@example.com"],
    studentEmail: ["bidisha@example.com", "tanooj@example.com", "geetam@example.com", "anukriti@example.com"],
  },
]);


// insert collections in the VidyaVichar database's Questions collection
db.Questions.drop();
db.Questions.insertMany([
{
questionId: 1, // New field
question: "What is a database?",
askedByEmail: "anshul@example.com", // Updated to email
courseName: "SSD",
instructorEmail: "sai@example.com", // Updated to email
questionAnswered: true,
isLive: true,
},
{
questionId: 2, // New field
question: "What is indexing?",
askedByEmail: "tanooj@example.com", // Updated to email
courseName: "SSD",
instructorEmail: "sai@example.com", // Updated to email
questionAnswered: true,
isLive: false,
},
{
questionId: 3, // New field
question: "What is sharding?",
askedByEmail: "geetam@example.com", // Updated to email
courseName: "AOS",
instructorEmail: "john@example.com", // Updated to email
questionAnswered: false,
isLive: false,
},
{
questionId: 4, // New field
question: "What is replication?",
askedByEmail: "anukriti@example.com", // Updated to email
courseName: "AOS",
instructorEmail: "john@example.com", // Updated to email
questionAnswered: false,
isLive: true,
},
{
questionId: 5, // New field
question: "What is a transaction?",
askedByEmail: "bidisha@example.com", // Updated to email
courseName: "SSD",
instructorEmail: "sai@example.com", // Updated to email
questionAnswered: false,
isLive: true,
},
{
questionId: 6, // New field
question: "What is CAP theorem?",
askedByEmail: "anshul@example.com", // Updated to email
courseName: "AOS",
instructorEmail: "john@example.com", // Updated to email
questionAnswered: false,
isLive: false,
},
{
questionId: 7, // New field
question: "What is ACID?",
askedByEmail: "tanooj@example.com", // Updated to email
courseName: "SSD",
instructorEmail: "sai@example.com", // Updated to email
questionAnswered: false,
isLive: false,
},
{
questionId: 8, // New field
question: "What is BASE?",
askedByEmail: "geetam@example.com", // Updated to email
courseName: "AOS",
instructorEmail: "john@example.com", // Updated to email
questionAnswered: false,
isLive: false,
},
{
questionId: 9, // New field
question: "What is a NoSQL database?",
askedByEmail: "anukriti@example.com", // Updated to email
courseName: "SSD",
instructorEmail: "sai@example.com", // Updated to email
questionAnswered: true,
isLive: true,
},
{
questionId: 10, // New field
question: "What is a relational database?",
askedByEmail: "bidisha@example.com", // Updated to email
courseName: "AOS",
instructorEmail: "john@example.com", // Updated to email
questionAnswered: false,
isLive: false,
},
{
questionId: 11, // New field
question: "What is a primary key?",
askedByEmail: "anshul@example.com", // Updated to email
courseName: "SSD",
instructorEmail: "sai@example.com", // Updated to email
questionAnswered: true,
isLive: true,
},
{
questionId: 12, // New field
question: "What is a foreign key?",
askedByEmail: "tanooj@example.com", // Updated to email
courseName: "AOS",
instructorEmail: "john@example.com", // Updated to email
questionAnswered: false,
isLive: false,
},
]);

//Drop collection users if it already exists
db.users.drop();

// insert collections in the VidyaVichar database's users collection

db.users.insertMany([
    {
        userName: "Anshul",
        email: "anshul@example.com",
        role: "student",
        password: "password123",
    },
    {
        userName: "Bidisha",
        email: "bidisha@example.com",
        role: "student",
        password: "password456",
    },
    {
        userName: "Tanooj",
        email: "tanooj@example.com",
        role: "student",
        password: "password789",
    },
    {
        userName: "Geetam",
        email: "geetam@example.com",
        role: "student",
        password: "password012",
    },
    {
        userName: "Anukriti",
        email: "anukriti@example.com",
        role: "student",
        password: "password345",
    },
    {
        userName: "Sai",
        email: "sai@example.com",
        role: "instructor",
        password: "password678",
    },
    {
        userName: "John",
        email: "john@example.com",
        role: "instructor",
        password: "password901",
    },
    {
        userName: "Alice",
        email: "alice@example.com",
        role: "TA",
        password: "password234",
    },
    {
        userName: "Bob",
        email: "bob@example.com",
        role: "TA",
        password: "password567",
    },
    {
        userName: "Aditya",
        email: "aditya@example.com",
        role: "TA",
        password: "password890",
    },
    {
        userName: "Chandrasekhar",
        email: "chandrasekhar@example.com",
        role: "TA",
        password: "password1234",
    },
]);

//Fetch the count of documents in the collections
console.log(db.courseMapping.countDocuments());
console.log(db.Questions.countDocuments());
console.log(db.users.countDocuments());
